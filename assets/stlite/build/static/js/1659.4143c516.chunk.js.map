{"version":3,"file":"static/js/1659.4143c516.chunk.js","mappings":"6KAmBO,MAAMA,GAAoBC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,EAAWE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CAC1DE,cAAeD,EAAME,QAAQC,KAC7BC,WAAYJ,EAAMK,YAAYC,OAC9BC,OAAOC,EAAAA,EAAAA,IAAUR,GAClB,GAAC,I,0BCgBF,QAZA,SAAiBD,GAAmD,IAAlD,QAAEU,EAAO,MAAEC,GAAsBX,EACjD,OACEY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAa,cAAY,aAAYC,SAAA,EAClDC,EAAAA,EAAAA,KAAClB,EAAiB,CAAAiB,UAChBC,EAAAA,EAAAA,KAACC,EAAAA,GAAiB,CAACC,OAAQP,EAAQQ,KAAMC,WAAW,EAAOC,SAAO,OAGpEL,EAAAA,EAAAA,KAACM,EAAAA,EAAW,CAACC,MAAOZ,EAAQY,MAAOX,MAAOA,MAGhD,C,2HCVO,IAAKY,EAAI,SAAJA,GAAI,OAAJA,EAAI,gBAAJA,EAAI,WAAJA,EAAI,YAAJA,EAAI,WAAJA,EAAI,gBAAJA,CAAI,MA4EhB,QA7DA,SAAoBvB,GAKgB,IALf,MACnBsB,EAAK,MACLX,EAAK,KACLa,EAAOD,EAAKE,MAAK,UACjBC,GACiB1B,EACjB,MAAMC,GAAsB0B,EAAAA,EAAAA,KACtBC,EAAY,CAChBC,GAAI5B,EAAME,QAAQ2B,MAClBC,GAAI9B,EAAME,QAAQ4B,GAClBC,GAAI/B,EAAME,QAAQ8B,GAClBA,GAAIhC,EAAME,QAAQ+B,GAClBA,GAAIjC,EAAME,QAAQgC,QAEd,YAAEC,GAAgBC,EAAAA,WAAiBC,EAAAA,GACnCC,IAAoBC,EAAAA,EAAAA,IAAcJ,GAClCK,EAAoD,CACxDC,aAAc,CACZC,MAAO,CACLC,UAAW3C,EAAME,QAAQ0C,KACzBC,aAAc7C,EAAME,QAAQ0C,KAC5BE,YAAa9C,EAAME,QAAQ0C,KAC3BG,WAAY/C,EAAME,QAAQ0C,OAG9BI,IAAK,CACHN,MAAOO,IAAA,IAAC,OAAEC,GAAyBD,EAAA,MAAM,CACvCvC,MAAOA,EAAQA,EAAMyC,gBAAaC,EAClCT,UAAW3C,EAAME,QAAQ0C,KACzBC,aAAc7C,EAAME,QAAQ0C,KAC5BE,YAAa9C,EAAME,QAAQ0C,KAC3BG,WAAY/C,EAAME,QAAQ0C,KAC1BS,OAAQ1B,EAAUJ,GAClB+B,gBAAiBJ,EAAOK,OAAOC,qBAC/BC,oBAAqBzD,EAAME,QAAQ2B,MACnC6B,qBAAsB1D,EAAME,QAAQ2B,MACpC8B,uBAAwB3D,EAAME,QAAQ2B,MACtC+B,wBAAyB5D,EAAME,QAAQ2B,MACxC,GAEHgC,YAAa,CACXnB,MAAOA,KAAA,CACLY,gBAAiBhB,EACbtC,EAAMuD,OAAOO,QACb9D,EAAMuD,OAAOQ,OACjBN,oBAAqBzD,EAAME,QAAQ2B,MACnC6B,qBAAsB1D,EAAME,QAAQ2B,MACpC8B,uBAAwB3D,EAAME,QAAQ2B,MACtC+B,wBAAyB5D,EAAME,QAAQ2B,UAK7C,OACEf,EAAAA,EAAAA,KAACkD,EAAAA,EAAa,CACZ3C,MAAOA,EACPI,WAAWwC,EAAAA,EAAAA,IAAezB,EAAkBf,IAGlD,C","sources":["../../../streamlit/frontend/lib/src/components/elements/Progress/styled-components.ts","../../../streamlit/frontend/lib/src/components/elements/Progress/Progress.tsx","../../../streamlit/frontend/lib/src/components/shared/ProgressBar/ProgressBar.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\nimport { getGray90 } from \"@streamlit/lib/src/theme\"\n\nexport const StyledCaptionText = styled.div(({ theme }) => ({\n  paddingBottom: theme.spacing.smPx,\n  lineHeight: theme.lineHeights.normal,\n  color: getGray90(theme),\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { Progress as ProgressProto } from \"@streamlit/lib/src/proto\"\nimport ProgressBar from \"@streamlit/lib/src/components/shared/ProgressBar\"\nimport { StyledCaptionText } from \"@streamlit/lib/src/components/elements/Progress/styled-components\"\nimport StreamlitMarkdown from \"@streamlit/lib/src/components/shared/StreamlitMarkdown\"\n\nexport interface ProgressProps {\n  width: number\n  element: ProgressProto\n}\n\nfunction Progress({ element, width }: ProgressProps): ReactElement {\n  return (\n    <div className=\"stProgress\" data-testid=\"stProgress\">\n      <StyledCaptionText>\n        <StreamlitMarkdown source={element.text} allowHTML={false} isLabel />\n      </StyledCaptionText>\n\n      <ProgressBar value={element.value} width={width} />\n    </div>\n  )\n}\n\nexport default Progress\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { useTheme } from \"@emotion/react\"\nimport { LibContext } from \"@streamlit/lib/src/components/core/LibContext\"\nimport { EmotionTheme, isPresetTheme } from \"@streamlit/lib/src/theme\"\nimport {\n  ProgressBar as UIProgressBar,\n  ProgressBarOverrides,\n} from \"baseui/progress-bar\"\nimport { mergeOverrides } from \"baseui\"\nimport { Overrides } from \"baseui/overrides\"\n\nexport enum Size {\n  EXTRASMALL = \"xs\",\n  SMALL = \"sm\",\n  MEDIUM = \"md\",\n  LARGE = \"lg\",\n  EXTRALARGE = \"xl\",\n}\n\nexport interface ProgressBarProps {\n  width?: number\n  value: number\n  overrides?: Overrides<any>\n  size?: Size\n}\n\nfunction ProgressBar({\n  value,\n  width,\n  size = Size.SMALL,\n  overrides,\n}: ProgressBarProps): ReactElement {\n  const theme: EmotionTheme = useTheme()\n  const heightMap = {\n    xs: theme.spacing.twoXS,\n    sm: theme.spacing.sm,\n    md: theme.spacing.lg,\n    lg: theme.spacing.xl,\n    xl: theme.spacing.twoXL,\n  }\n  const { activeTheme } = React.useContext(LibContext)\n  const usingCustomTheme = !isPresetTheme(activeTheme)\n  const defaultOverrides: Overrides<ProgressBarOverrides> = {\n    BarContainer: {\n      style: {\n        marginTop: theme.spacing.none,\n        marginBottom: theme.spacing.none,\n        marginRight: theme.spacing.none,\n        marginLeft: theme.spacing.none,\n      },\n    },\n    Bar: {\n      style: ({ $theme }: { $theme: any }) => ({\n        width: width ? width.toString() : undefined,\n        marginTop: theme.spacing.none,\n        marginBottom: theme.spacing.none,\n        marginRight: theme.spacing.none,\n        marginLeft: theme.spacing.none,\n        height: heightMap[size],\n        backgroundColor: $theme.colors.progressbarTrackFill,\n        borderTopLeftRadius: theme.spacing.twoXS,\n        borderTopRightRadius: theme.spacing.twoXS,\n        borderBottomLeftRadius: theme.spacing.twoXS,\n        borderBottomRightRadius: theme.spacing.twoXS,\n      }),\n    },\n    BarProgress: {\n      style: () => ({\n        backgroundColor: usingCustomTheme\n          ? theme.colors.primary\n          : theme.colors.blue70,\n        borderTopLeftRadius: theme.spacing.twoXS,\n        borderTopRightRadius: theme.spacing.twoXS,\n        borderBottomLeftRadius: theme.spacing.twoXS,\n        borderBottomRightRadius: theme.spacing.twoXS,\n      }),\n    },\n  }\n\n  return (\n    <UIProgressBar\n      value={value}\n      overrides={mergeOverrides(defaultOverrides, overrides)}\n    />\n  )\n}\n\nexport default ProgressBar\n"],"names":["StyledCaptionText","_styled","target","_ref","theme","paddingBottom","spacing","smPx","lineHeight","lineHeights","normal","color","getGray90","element","width","_jsxs","className","children","_jsx","StreamlitMarkdown","source","text","allowHTML","isLabel","ProgressBar","value","Size","size","SMALL","overrides","useTheme","heightMap","xs","twoXS","sm","md","lg","xl","twoXL","activeTheme","React","LibContext","usingCustomTheme","isPresetTheme","defaultOverrides","BarContainer","style","marginTop","none","marginBottom","marginRight","marginLeft","Bar","_ref2","$theme","toString","undefined","height","backgroundColor","colors","progressbarTrackFill","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","BarProgress","primary","blue70","UIProgressBar","mergeOverrides"],"sourceRoot":""}