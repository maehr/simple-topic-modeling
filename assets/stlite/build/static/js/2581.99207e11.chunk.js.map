{"version":3,"file":"static/js/2581.99207e11.chunk.js","mappings":"oLAgCA,MAAMA,EAAgDC,IAAA,IAAC,UACrDC,EAAS,YACTC,EAAW,aACXC,EAAY,iBACZC,EAAgB,kBAChBC,GACML,EAAA,OAGNM,EAAAA,EAAAA,KAAA,OACEL,UAAWM,IAAWN,EAAW,YACjC,iBAAAO,OAAgBP,GAAYQ,SAE3BC,IAAMP,GAAcQ,KAAIC,IACvB,MAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWZ,GAE3C,OAAOE,EAAAA,EAAAA,KAACD,EAAiB,CAAuBY,aAAcJ,GAA/BX,EAAcU,EAA4B,KAExE,EAGP,GAAeM,EAAAA,EAAAA,MAAKnB,E,+RClCpB,MAMMoB,EAAO,SAACC,GAAW,IAAEC,EAAGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAC,OAChCR,KAAKE,UAAYI,EAAMC,GAAOA,CAAG,EAE7BI,EAAWA,KAAiBC,SAAAA,EAAAA,IAASC,I,EAAA,8P,kBAAAA,E,0EAI3BR,EAAK,KACLA,EAAK,KACLA,EAAK,KAfA,K,OAyBpB,EAEYS,GAAcC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,EAAW7B,IAAA,IAAC,MAAE+B,GAAO/B,EAAA,MAAM,CACpDgC,SAAU,QACVC,IAAI,GAADzB,QA7BgB,IA6BE,MACrB0B,WAAW,GAAD1B,QAAK,GAAgB,MAC/B2B,OAAQJ,EAAMK,SAASC,SACvBC,KAAK,GAAD9B,OAAKW,EA7BQ,GADA,IA8BoB,MACrCoB,eAAe,GAAD/B,OAAKW,EA7BA,KA6BkB,MACrCqB,OAAO,GAADhC,OAlCa,IAkCI,MACvBiC,MAAM,GAADjC,OAlCa,IAkCG,MACrBkC,cAAe,OAEfC,kBAAmB,SACnBC,cAAenB,IACfoB,wBAAyB,UACzBC,mBAAoB,SACpBC,wBAAyB,EACzBC,QAAS,EACV,GAAC,I,eChCK,MAAMC,EAAa,IAEpBC,EAAyB,CAACC,EAAQC,EAAQC,GAE1CC,EAAkBJ,EAAa3B,OAM/BgC,EAAoDvD,IAAA,IAAC,aACzDiB,GACDjB,EAAA,OAAKM,EAAAA,EAAAA,KAACsB,EAAW,CAAC4B,IAAKN,EAAajC,IAAiB,EAEhDwC,EAA2C,SAAaC,GAE1D,IAF2D,YAC7DxD,GACDwD,EAGC,OACEpD,EAAAA,EAAAA,KAACP,EAAAA,EAAS,CACRE,UAAU,OACVC,YAAaA,EACbE,iBAAkBkD,EAClBnD,aAAc8C,EACd5C,kBAAmBkD,GAGzB,EAEA,GAAerC,EAAAA,EAAAA,MAAKuC,E","sources":["../../../streamlit/frontend/lib/src/components/elements/Particles/Particles.tsx","../../../streamlit/frontend/lib/src/components/elements/Snow/styled-components.ts","../../../streamlit/frontend/lib/src/components/elements/Snow/Snow.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, memo } from \"react\"\nimport range from \"lodash/range\"\nimport classNames from \"classnames\"\n\nexport interface ParticleProps {\n  particleType: number\n}\n\nexport interface Props {\n  className: string\n  scriptRunId: string\n  numParticles: number\n  numParticleTypes: number\n  ParticleComponent: FC<React.PropsWithChildren<ParticleProps>>\n}\n\nconst Particles: FC<React.PropsWithChildren<Props>> = ({\n  className,\n  scriptRunId,\n  numParticles,\n  numParticleTypes,\n  ParticleComponent,\n}: Props) => (\n  // Keys should be unique each time, so React replaces the images in the DOM and their animations\n  // actually rerun.\n  <div\n    className={classNames(className, \"stHidden\")}\n    data-testid={`${className}`}\n  >\n    {range(numParticles).map(i => {\n      const randNum = Math.floor(Math.random() * numParticleTypes)\n\n      return <ParticleComponent key={scriptRunId + i} particleType={randNum} />\n    })}\n  </div>\n)\n\nexport default memo(Particles)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { keyframes, Keyframes } from \"@emotion/react\"\nimport styled from \"@emotion/styled\"\n\nconst IMAGE_HEIGHT = 150\nconst IMAGE_WIDTH = 150\nconst POS_MIN_VW = 10\nconst POS_MAX_VW = 90\nconst DELAY_MAX_MS = 4000\n\nconst rand = (max: number, min = 0): number =>\n  Math.random() * (max - min) + min\n\nconst moveDown = (): Keyframes => keyframes`\n  from {\n    transform:\n      translateY(0)\n      rotateX(${rand(360)}deg)\n      rotateY(${rand(360)}deg)\n      rotateZ(${rand(360)}deg);\n  }\n\n  to {\n    transform:\n      translateY(calc(100vh + ${IMAGE_HEIGHT}px))\n      rotateX(0)\n      rotateY(0)\n      rotateZ(0);\n  }\n`\n\nexport const StyledFlake = styled.img(({ theme }) => ({\n  position: \"fixed\",\n  top: `${-IMAGE_HEIGHT}px`,\n  marginLeft: `${-IMAGE_WIDTH / 2}px`,\n  zIndex: theme.zIndices.balloons,\n  left: `${rand(POS_MAX_VW, POS_MIN_VW)}vw`,\n  animationDelay: `${rand(DELAY_MAX_MS)}ms`,\n  height: `${IMAGE_HEIGHT}px`,\n  width: `${IMAGE_WIDTH}px`,\n  pointerEvents: \"none\",\n\n  animationDuration: \"3000ms\",\n  animationName: moveDown(),\n  animationTimingFunction: \"ease-in\",\n  animationDirection: \"normal\",\n  animationIterationCount: 1,\n  opacity: 1,\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, memo } from \"react\"\n\n/*\n * IMPORTANT: If you change the asset imports below, make sure they still work if Streamlit is\n * served from a subpath.\n */\nimport Flake0 from \"@streamlit/lib/src/assets/img/snow/flake-0.png\"\nimport Flake1 from \"@streamlit/lib/src/assets/img/snow/flake-1.png\"\nimport Flake2 from \"@streamlit/lib/src/assets/img/snow/flake-2.png\"\n\nimport Particles from \"@streamlit/lib/src/components/elements/Particles\"\nimport { ParticleProps } from \"@streamlit/lib/src/components/elements/Particles/Particles\"\n\nimport { StyledFlake } from \"./styled-components\"\n\nexport const NUM_FLAKES = 100\n\nconst FLAKE_IMAGES: string[] = [Flake0, Flake1, Flake2]\n\nconst NUM_FLAKE_TYPES = FLAKE_IMAGES.length\n\nexport interface Props {\n  scriptRunId: string\n}\n\nconst Flake: FC<React.PropsWithChildren<ParticleProps>> = ({\n  particleType,\n}) => <StyledFlake src={FLAKE_IMAGES[particleType]} />\n\nconst Snow: FC<React.PropsWithChildren<Props>> = function Snow({\n  scriptRunId,\n}) {\n  // Keys should be unique each time, so React replaces the images in the DOM and their animations\n  // actually rerun.\n  return (\n    <Particles\n      className=\"snow\"\n      scriptRunId={scriptRunId}\n      numParticleTypes={NUM_FLAKE_TYPES}\n      numParticles={NUM_FLAKES}\n      ParticleComponent={Flake}\n    />\n  )\n}\n\nexport default memo(Snow)\n"],"names":["Particles","_ref","className","scriptRunId","numParticles","numParticleTypes","ParticleComponent","_jsx","classNames","concat","children","range","map","i","randNum","Math","floor","random","particleType","memo","rand","max","min","arguments","length","undefined","moveDown","keyframes","_templateObject","StyledFlake","_styled","target","theme","position","top","marginLeft","zIndex","zIndices","balloons","left","animationDelay","height","width","pointerEvents","animationDuration","animationName","animationTimingFunction","animationDirection","animationIterationCount","opacity","NUM_FLAKES","FLAKE_IMAGES","Flake0","Flake1","Flake2","NUM_FLAKE_TYPES","Flake","src","Snow","_ref2"],"sourceRoot":""}