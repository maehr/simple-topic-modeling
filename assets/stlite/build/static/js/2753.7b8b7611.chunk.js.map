{"version":3,"file":"static/js/2753.7b8b7611.chunk.js","mappings":"oKA0BA,MAAMA,EAAkBC,GAOfC,EAAAA,EAAAA,SAAmBD,EANE,CAE1BE,aAAc,CAAEF,MAAM,GAEtBG,YAAY,IAQD,SAASC,EAAIC,GAA+C,IAA9C,QAAEC,EAAO,MAAEC,GAAkBF,EACxD,MAAM,KAAEG,GAASF,GACVG,EAAeC,IAAoBC,EAAAA,EAAAA,UAASZ,EAAeS,IAC5DI,GAAUC,EAAAA,EAAAA,QAA8B,MAmB9C,OAjBAC,EAAAA,EAAAA,YAAU,KACJf,EAAeS,KAAUC,GAC3BC,EAAiBX,EAAeS,GAClC,GAEC,CAACA,KAEJM,EAAAA,EAAAA,YAAU,KAAO,IAADC,EAAAC,EAEsB,KAAnB,QAAfD,EAAAH,EAAQK,eAAO,IAAAF,OAAA,EAAfA,EAAiBG,eACoC,KAAxB,QAA7BF,EAAAJ,EAAQK,QAAQE,qBAAa,IAAAH,OAAA,EAA7BA,EAA+BI,oBAG/BR,EAAQK,QAAQE,cAAcE,UAAUC,IAAI,aAC9C,KAIAC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGhB,IACCc,EAAAA,EAAAA,KAAA,OACEG,UAAU,SACV,cAAY,SACZC,IAAKf,EACLgB,MAAO,CAAErB,MAAOA,GAChBsB,wBAAyB,CAAEC,OAAQrB,MAK7C,C","sources":["../../../streamlit/frontend/lib/src/components/elements/Html/Html.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement, useState, useEffect, useRef } from \"react\"\nimport DOMPurify from \"dompurify\"\n\nimport { Html as HtmlProto } from \"@streamlit/lib/src/proto\"\n\nexport interface HtmlProps {\n  width: number\n  element: HtmlProto\n}\n\nconst sanitizeString = (html: string): string => {\n  const sanitizationOptions = {\n    // Default to permit HTML, SVG and MathML, this limits to HTML only\n    USE_PROFILES: { html: true },\n    // glue elements like style, script or others to document.body and prevent unintuitive browser behavior in several edge-cases\n    FORCE_BODY: true,\n  }\n  return DOMPurify.sanitize(html, sanitizationOptions)\n}\n\n/**\n * HTML code to insert into the page.\n */\nexport default function Html({ element, width }: HtmlProps): ReactElement {\n  const { body } = element\n  const [sanitizedHtml, setSanitizedHtml] = useState(sanitizeString(body))\n  const htmlRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    if (sanitizeString(body) !== sanitizedHtml) {\n      setSanitizedHtml(sanitizeString(body))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [body])\n\n  useEffect(() => {\n    if (\n      htmlRef.current?.clientHeight === 0 &&\n      htmlRef.current.parentElement?.childElementCount === 1\n    ) {\n      // div has no rendered content - hide to avoid unnecessary spacing\n      htmlRef.current.parentElement.classList.add(\"empty-html\")\n    }\n  })\n\n  return (\n    <>\n      {sanitizedHtml && (\n        <div\n          className=\"stHtml\"\n          data-testid=\"stHtml\"\n          ref={htmlRef}\n          style={{ width: width }}\n          dangerouslySetInnerHTML={{ __html: sanitizedHtml }}\n        />\n      )}\n    </>\n  )\n}\n"],"names":["sanitizeString","html","DOMPurify","USE_PROFILES","FORCE_BODY","Html","_ref","element","width","body","sanitizedHtml","setSanitizedHtml","useState","htmlRef","useRef","useEffect","_htmlRef$current","_htmlRef$current$pare","current","clientHeight","parentElement","childElementCount","classList","add","_jsx","_Fragment","children","className","ref","style","dangerouslySetInnerHTML","__html"],"sourceRoot":""}