{"version":3,"file":"static/js/3662.9217e06b.chunk.js","mappings":"+LAgEA,MA/BA,SAAgBA,GACd,IAAQC,EAAwCD,EAAxCC,SAAUC,EAA8BF,EAA9BE,QAASC,EAAqBH,EAArBG,UACrBC,EAAQ,CAAEC,MADgCL,EAAVK,OAGhCC,EACa,YAAjBJ,EAAQK,KACJC,EAAAA,GAAAA,QACAA,EAAAA,GAAAA,UAEN,OACE,gBAAKC,UAAU,sBAAsBL,MAAOA,EAAM,UAChD,SAACM,EAAA,GAAiB,CAACC,KAAMT,EAAQS,KAAK,UACpC,SAACD,EAAA,GAAU,CACTJ,KAAMA,EACNM,KAAMC,EAAAA,GAAAA,MACNZ,SAAUA,EACVa,WAAYZ,EAAQa,oBAAqB,EACzCC,QAAS,kBAAMb,EAAUc,gBAAgBf,EAAS,CAAEgB,QAAQ,GAAO,EAAC,UAEpE,SAACC,EAAA,EAAiB,CAChBC,OAAQlB,EAAQmB,MAChBC,WAAW,EACXC,SAAO,EACPC,UAAQ,SAMpB,C","sources":["../../../streamlit/frontend/src/lib/components/widgets/Button/Button.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { Button as ButtonProto } from \"src/lib/proto\"\nimport BaseButton, {\n  BaseButtonTooltip,\n  BaseButtonKind,\n  BaseButtonSize,\n} from \"src/lib/components/shared/BaseButton\"\nimport { WidgetStateManager } from \"src/lib/WidgetStateManager\"\nimport StreamlitMarkdown from \"src/lib/components/shared/StreamlitMarkdown\"\n\nexport interface Props {\n  disabled: boolean\n  element: ButtonProto\n  widgetMgr: WidgetStateManager\n  width: number\n}\n\nfunction Button(props: Props): ReactElement {\n  const { disabled, element, widgetMgr, width } = props\n  const style = { width }\n\n  const kind =\n    element.type === \"primary\"\n      ? BaseButtonKind.PRIMARY\n      : BaseButtonKind.SECONDARY\n\n  return (\n    <div className=\"row-widget stButton\" style={style}>\n      <BaseButtonTooltip help={element.help}>\n        <BaseButton\n          kind={kind}\n          size={BaseButtonSize.SMALL}\n          disabled={disabled}\n          fluidWidth={element.useContainerWidth || false}\n          onClick={() => widgetMgr.setTriggerValue(element, { fromUi: true })}\n        >\n          <StreamlitMarkdown\n            source={element.label}\n            allowHTML={false}\n            isLabel\n            isButton\n          />\n        </BaseButton>\n      </BaseButtonTooltip>\n    </div>\n  )\n}\n\nexport default Button\n"],"names":["props","disabled","element","widgetMgr","style","width","kind","type","BaseButtonKind","className","BaseButton","help","size","BaseButtonSize","fluidWidth","useContainerWidth","onClick","setTriggerValue","fromUi","StreamlitMarkdown","source","label","allowHTML","isLabel","isButton"],"sourceRoot":""}