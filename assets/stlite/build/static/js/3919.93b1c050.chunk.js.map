{"version":3,"file":"static/js/3919.93b1c050.chunk.js","mappings":"kMAmBaA,GAAoB,oCAAW,gBAAGC,EAAK,EAALA,MAAK,MAAQ,CAC1DC,cAAeD,EAAME,QAAQC,KAC7BC,WAAYJ,EAAMK,YAAYC,OAC9BC,OAAOC,EAAAA,EAAAA,IAAUR,GAClB,GAAC,I,qBCgBF,MAZA,SAAkB,GAAkD,IAAhDS,EAAO,EAAPA,QAASC,EAAK,EAALA,MAC3B,OACE,iBAAKC,UAAU,aAAY,WACzB,SAACZ,EAAiB,WAChB,SAACa,EAAA,EAAiB,CAACC,OAAQJ,EAAQK,KAAMC,WAAW,EAAOC,SAAO,OAGpE,SAACC,EAAA,EAAW,CAACC,MAAOT,EAAQS,MAAOR,MAAOA,MAGhD,C,mFCVYS,E,6EAMX,SANWA,GAAAA,EAAI,gBAAJA,EAAI,WAAJA,EAAI,YAAJA,EAAI,WAAJA,EAAI,gBAMf,CANWA,IAAAA,EAAI,KA4EhB,MA7DA,SAAqB,GAKe,IAJlCD,EAAK,EAALA,MACAR,EAAK,EAALA,MAAM,EAAD,EACLU,KAAAA,OAAI,MAAGD,EAAKE,MAAK,EACjBC,EAAS,EAATA,UAEMtB,GAAsBuB,EAAAA,EAAAA,KACtBC,EAAY,CAChBC,GAAIzB,EAAME,QAAQwB,MAClBC,GAAI3B,EAAME,QAAQyB,GAClBC,GAAI5B,EAAME,QAAQ2B,GAClBA,GAAI7B,EAAME,QAAQ4B,GAClBA,GAAI9B,EAAME,QAAQ6B,OAEZC,EAAgBC,EAAAA,WAAiBC,EAAAA,GAAjCF,YACFG,IAAoBC,EAAAA,EAAAA,IAAcJ,GAClCK,EAAoD,CACxDC,aAAc,CACZC,MAAO,CACLC,UAAWxC,EAAME,QAAQuC,KACzBC,aAAc1C,EAAME,QAAQuC,KAC5BE,YAAa3C,EAAME,QAAQuC,KAC3BG,WAAY5C,EAAME,QAAQuC,OAG9BI,IAAK,CACHN,MAAO,gBAAGO,EAAM,EAANA,OAAM,MAAyB,CACvCpC,MAAOA,EAAQA,EAAMqC,gBAAaC,EAClCR,UAAWxC,EAAME,QAAQuC,KACzBC,aAAc1C,EAAME,QAAQuC,KAC5BE,YAAa3C,EAAME,QAAQuC,KAC3BG,WAAY5C,EAAME,QAAQuC,KAC1BQ,OAAQzB,EAAUJ,GAClB8B,gBAAiBJ,EAAOK,OAAOC,qBAC/BC,oBAAqBrD,EAAME,QAAQwB,MACnC4B,qBAAsBtD,EAAME,QAAQwB,MACpC6B,uBAAwBvD,EAAME,QAAQwB,MACtC8B,wBAAyBxD,EAAME,QAAQwB,MACxC,GAEH+B,YAAa,CACXlB,MAAO,iBAAO,CACZW,gBAAiBf,EACbnC,EAAMmD,OAAOO,QACb1D,EAAMmD,OAAOQ,OACjBN,oBAAqBrD,EAAME,QAAQwB,MACnC4B,qBAAsBtD,EAAME,QAAQwB,MACpC6B,uBAAwBvD,EAAME,QAAQwB,MACtC8B,wBAAyBxD,EAAME,QAAQwB,MACxC,IAIL,OACE,SAAC,IAAa,CACZR,MAAOA,EACPI,WAAWsC,EAAAA,EAAAA,IAAevB,EAAkBf,IAGlD,C","sources":["../../../streamlit/frontend/src/lib/components/elements/Progress/styled-components.ts","../../../streamlit/frontend/src/lib/components/elements/Progress/Progress.tsx","../../../streamlit/frontend/src/lib/components/shared/ProgressBar/ProgressBar.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\nimport { getGray90 } from \"src/lib/theme\"\n\nexport const StyledCaptionText = styled.div(({ theme }) => ({\n  paddingBottom: theme.spacing.smPx,\n  lineHeight: theme.lineHeights.normal,\n  color: getGray90(theme),\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { Progress as ProgressProto } from \"src/lib/proto\"\nimport ProgressBar from \"src/lib/components/shared/ProgressBar\"\nimport { StyledCaptionText } from \"src/lib/components/elements/Progress/styled-components\"\nimport StreamlitMarkdown from \"src/lib/components/shared/StreamlitMarkdown\"\n\nexport interface ProgressProps {\n  width: number\n  element: ProgressProto\n}\n\nfunction Progress({ element, width }: ProgressProps): ReactElement {\n  return (\n    <div className=\"stProgress\">\n      <StyledCaptionText>\n        <StreamlitMarkdown source={element.text} allowHTML={false} isLabel />\n      </StyledCaptionText>\n\n      <ProgressBar value={element.value} width={width} />\n    </div>\n  )\n}\n\nexport default Progress\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { useTheme } from \"@emotion/react\"\nimport { EmotionTheme, isPresetTheme } from \"src/lib/theme\"\nimport {\n  ProgressBar as UIProgressBar,\n  ProgressBarOverrides,\n} from \"baseui/progress-bar\"\nimport { mergeOverrides } from \"baseui\"\nimport { Overrides } from \"baseui/overrides\"\nimport { LibContext } from \"src/lib/components/core/LibContext\"\n\nexport enum Size {\n  EXTRASMALL = \"xs\",\n  SMALL = \"sm\",\n  MEDIUM = \"md\",\n  LARGE = \"lg\",\n  EXTRALARGE = \"xl\",\n}\n\nexport interface ProgressBarProps {\n  width?: number\n  value: number\n  overrides?: Overrides<any>\n  size?: Size\n}\n\nfunction ProgressBar({\n  value,\n  width,\n  size = Size.SMALL,\n  overrides,\n}: ProgressBarProps): ReactElement {\n  const theme: EmotionTheme = useTheme()\n  const heightMap = {\n    xs: theme.spacing.twoXS,\n    sm: theme.spacing.sm,\n    md: theme.spacing.lg,\n    lg: theme.spacing.xl,\n    xl: theme.spacing.twoXL,\n  }\n  const { activeTheme } = React.useContext(LibContext)\n  const usingCustomTheme = !isPresetTheme(activeTheme)\n  const defaultOverrides: Overrides<ProgressBarOverrides> = {\n    BarContainer: {\n      style: {\n        marginTop: theme.spacing.none,\n        marginBottom: theme.spacing.none,\n        marginRight: theme.spacing.none,\n        marginLeft: theme.spacing.none,\n      },\n    },\n    Bar: {\n      style: ({ $theme }: { $theme: any }) => ({\n        width: width ? width.toString() : undefined,\n        marginTop: theme.spacing.none,\n        marginBottom: theme.spacing.none,\n        marginRight: theme.spacing.none,\n        marginLeft: theme.spacing.none,\n        height: heightMap[size],\n        backgroundColor: $theme.colors.progressbarTrackFill,\n        borderTopLeftRadius: theme.spacing.twoXS,\n        borderTopRightRadius: theme.spacing.twoXS,\n        borderBottomLeftRadius: theme.spacing.twoXS,\n        borderBottomRightRadius: theme.spacing.twoXS,\n      }),\n    },\n    BarProgress: {\n      style: () => ({\n        backgroundColor: usingCustomTheme\n          ? theme.colors.primary\n          : theme.colors.blue70,\n        borderTopLeftRadius: theme.spacing.twoXS,\n        borderTopRightRadius: theme.spacing.twoXS,\n        borderBottomLeftRadius: theme.spacing.twoXS,\n        borderBottomRightRadius: theme.spacing.twoXS,\n      }),\n    },\n  }\n\n  return (\n    <UIProgressBar\n      value={value}\n      overrides={mergeOverrides(defaultOverrides, overrides)}\n    />\n  )\n}\n\nexport default ProgressBar\n"],"names":["StyledCaptionText","theme","paddingBottom","spacing","smPx","lineHeight","lineHeights","normal","color","getGray90","element","width","className","StreamlitMarkdown","source","text","allowHTML","isLabel","ProgressBar","value","Size","size","SMALL","overrides","useTheme","heightMap","xs","twoXS","sm","md","lg","xl","twoXL","activeTheme","React","LibContext","usingCustomTheme","isPresetTheme","defaultOverrides","BarContainer","style","marginTop","none","marginBottom","marginRight","marginLeft","Bar","$theme","toString","undefined","height","backgroundColor","colors","progressbarTrackFill","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","BarProgress","primary","blue70","mergeOverrides"],"sourceRoot":""}