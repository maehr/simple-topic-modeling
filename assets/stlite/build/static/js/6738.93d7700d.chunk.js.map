{"version":3,"file":"static/js/6738.93d7700d.chunk.js","mappings":"iMAqEA,QApCA,SAAgBA,GACd,MAAM,SAAEC,EAAQ,QAAEC,EAAO,UAAEC,EAAS,MAAEC,GAAUJ,EAC1CK,EAAQ,CAAED,SAEVE,EACa,YAAjBJ,EAAQK,KACJC,EAAAA,GAAAA,QACAA,EAAAA,GAAAA,UAIAC,GAAaP,EAAQQ,MAAON,EAElC,OACEO,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAsB,cAAY,WAAWP,MAAOA,EAAMQ,UACvEF,EAAAA,EAAAA,KAACG,EAAAA,EAAiB,CAACJ,KAAMR,EAAQQ,KAAKG,UACpCF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTT,KAAMA,EACNU,KAAMC,EAAAA,GAAAA,MACNhB,SAAUA,EACVQ,aAAYP,EAAQgB,mBAAoBT,EACxCU,QAASA,IAAMhB,EAAUiB,gBAAgBlB,EAAS,CAAEmB,QAAQ,IAAQR,UAEpEF,EAAAA,EAAAA,KAACW,EAAAA,GAAiB,CAChBC,OAAQrB,EAAQsB,MAChBC,WAAW,EACXC,SAAO,EACPC,aAAW,EACXC,cAAY,SAMxB,C","sources":["../../../streamlit/frontend/lib/src/components/widgets/Button/Button.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { Button as ButtonProto } from \"@streamlit/lib/src/proto\"\nimport BaseButton, {\n  BaseButtonTooltip,\n  BaseButtonKind,\n  BaseButtonSize,\n} from \"@streamlit/lib/src/components/shared/BaseButton\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport StreamlitMarkdown from \"@streamlit/lib/src/components/shared/StreamlitMarkdown\"\n\nexport interface Props {\n  disabled: boolean\n  element: ButtonProto\n  widgetMgr: WidgetStateManager\n  width: number\n}\n\nfunction Button(props: Props): ReactElement {\n  const { disabled, element, widgetMgr, width } = props\n  const style = { width }\n\n  const kind =\n    element.type === \"primary\"\n      ? BaseButtonKind.PRIMARY\n      : BaseButtonKind.SECONDARY\n\n  // When useContainerWidth true & has help tooltip,\n  // we need to pass the container width down to the button\n  const fluidWidth = element.help ? width : true\n\n  return (\n    <div className=\"row-widget stButton\" data-testid=\"stButton\" style={style}>\n      <BaseButtonTooltip help={element.help}>\n        <BaseButton\n          kind={kind}\n          size={BaseButtonSize.SMALL}\n          disabled={disabled}\n          fluidWidth={element.useContainerWidth ? fluidWidth : false}\n          onClick={() => widgetMgr.setTriggerValue(element, { fromUi: true })}\n        >\n          <StreamlitMarkdown\n            source={element.label}\n            allowHTML={false}\n            isLabel\n            largerLabel\n            disableLinks\n          />\n        </BaseButton>\n      </BaseButtonTooltip>\n    </div>\n  )\n}\n\nexport default Button\n"],"names":["props","disabled","element","widgetMgr","width","style","kind","type","BaseButtonKind","fluidWidth","help","_jsx","className","children","BaseButtonTooltip","BaseButton","size","BaseButtonSize","useContainerWidth","onClick","setTriggerValue","fromUi","StreamlitMarkdown","source","label","allowHTML","isLabel","largerLabel","disableLinks"],"sourceRoot":""}