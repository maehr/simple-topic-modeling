{"version":3,"file":"static/js/8727.896e1d97.chunk.js","mappings":"yLAsBO,MAAMA,GAAsBC,E,SAAAA,GAAA,OAAAC,OAAA,aAAAD,EACjCE,IAAA,IAAC,MAAEC,EAAK,aAAEC,GAAcF,EAAA,MAAM,CAC5B,MAAO,CACLG,WAAYF,EAAMG,aAAaC,SAI/BC,SAAU,SAIZ,QAAS,CACPC,SAAU,OACVC,MAAON,EAAe,OAAS,OAC/BO,OAAQP,EAAe,OAAS,QAElCM,MAAON,EAAe,OAAS,OAC/BO,OAAQP,EAAe,OAAS,OACjC,GAAC,I,eCgCJ,SAAeQ,EAAAA,EAAAA,IA3CR,SAAsBV,GAGS,IAHR,QAC5BW,EAAO,aACPT,GACmBF,EACnB,MAAMY,EAAO,kBAAAC,OAAqBF,EAAQG,WA6B1C,OA3BAC,EAAAA,EAAAA,YAAU,KACR,IAQE,IAPAC,EAAAA,EAAAA,UAAS,IAADH,OAAKD,IACVK,MAAK,GACLC,KAAI,GACJC,MAAM,GACNC,OAAOT,EAAQS,QACfC,UAAUV,EAAQW,MAEjBpB,GAAgBS,EAAQY,kBAAmB,CAC7C,MAAMC,GAAOC,EAAAA,EAAAA,IAAO,IAADZ,OAAKD,EAAO,WAAUY,OAGzCA,EAAKE,gBAAgB,SACrBF,EAAKE,gBAAgB,SACvB,CACF,CAAE,MAAOC,IACPC,EAAAA,EAAAA,GAASD,EACX,IACC,CACDf,EACAD,EAAQS,OACRT,EAAQW,KACRX,EAAQY,kBACRrB,KAIA2B,EAAAA,EAAAA,KAAChC,EAAmB,CAClBiC,UAAU,2BACV,cAAY,kBACZC,GAAInB,EACJV,aAAcA,GAGpB,G","sources":["../../../streamlit/frontend/lib/src/components/elements/GraphVizChart/styled-components.ts","../../../streamlit/frontend/lib/src/components/elements/GraphVizChart/GraphVizChart.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\ninterface StyledGraphVizChartProps {\n  isFullScreen: boolean\n}\n\nexport const StyledGraphVizChart = styled.div<StyledGraphVizChartProps>(\n  ({ theme, isFullScreen }) => ({\n    \"& *\": {\n      fontFamily: theme.genericFonts.bodyFont,\n      // Font sizes inside the SVG element are getting huge for some reason.\n      // Hacking together a number by eyeballing it:\n      // 12px in the SVG looks like 1rem outside, so 9.6px ~= 0.8rem.\n      fontSize: \"9.6px\",\n    },\n\n    // Ensure SVG is allowed the full width/height in full screen mode\n    \"& svg\": {\n      maxWidth: \"100%\",\n      width: isFullScreen ? \"100%\" : \"auto\",\n      height: isFullScreen ? \"100%\" : \"auto\",\n    },\n    width: isFullScreen ? \"100%\" : \"auto\",\n    height: isFullScreen ? \"100%\" : \"auto\",\n  })\n)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement, useEffect } from \"react\"\nimport { select } from \"d3\"\nimport { graphviz, Engine } from \"d3-graphviz\"\nimport { logError } from \"@streamlit/lib/src/util/log\"\nimport { withFullScreenWrapper } from \"@streamlit/lib/src/components/shared/FullScreenWrapper\"\nimport { GraphVizChart as GraphVizChartProto } from \"@streamlit/lib/src/proto\"\nimport { StyledGraphVizChart } from \"./styled-components\"\n\nexport interface GraphVizChartProps {\n  element: GraphVizChartProto\n  isFullScreen: boolean\n}\n\nexport function GraphVizChart({\n  element,\n  isFullScreen,\n}: GraphVizChartProps): ReactElement {\n  const chartId = `graphviz-chart-${element.elementId}`\n\n  useEffect(() => {\n    try {\n      graphviz(`#${chartId}`)\n        .zoom(false)\n        .fit(true)\n        .scale(1)\n        .engine(element.engine as Engine)\n        .renderDot(element.spec)\n\n      if (isFullScreen || element.useContainerWidth) {\n        const node = select(`#${chartId} > svg`).node() as SVGGraphicsElement\n        // We explicitly remove width and height to let CSS and the SVG viewBox\n        // define its dimensions\n        node.removeAttribute(\"width\")\n        node.removeAttribute(\"height\")\n      }\n    } catch (error) {\n      logError(error)\n    }\n  }, [\n    chartId,\n    element.engine,\n    element.spec,\n    element.useContainerWidth,\n    isFullScreen,\n  ])\n\n  return (\n    <StyledGraphVizChart\n      className=\"graphviz stGraphVizChart\"\n      data-testid=\"stGraphVizChart\"\n      id={chartId}\n      isFullScreen={isFullScreen}\n    />\n  )\n}\n\nexport default withFullScreenWrapper(GraphVizChart)\n"],"names":["StyledGraphVizChart","_styled","target","_ref","theme","isFullScreen","fontFamily","genericFonts","bodyFont","fontSize","maxWidth","width","height","withFullScreenWrapper","element","chartId","concat","elementId","useEffect","graphviz","zoom","fit","scale","engine","renderDot","spec","useContainerWidth","node","select","removeAttribute","error","logError","_jsx","className","id"],"sourceRoot":""}