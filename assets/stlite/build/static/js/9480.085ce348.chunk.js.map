{"version":3,"file":"static/js/9480.085ce348.chunk.js","mappings":"4MAgGA,QA5DA,SAAwBA,GACtB,MAAM,SAAEC,EAAQ,QAAEC,EAAO,UAAEC,EAAS,MAAEC,EAAK,UAAEC,GAAcL,EACrDM,EAAQ,CAAEF,SAEVG,EACa,YAAjBL,EAAQM,KACJC,EAAAA,GAAAA,QACAA,EAAAA,GAAAA,UAEAC,GAAeC,EAAAA,EAAAA,MAsBfC,GAAaV,EAAQW,MAAOT,EAElC,OACEU,EAAAA,EAAAA,KAAA,OACEC,UAAU,8BACV,cAAY,mBACZT,MAAOA,EAAMU,UAEbF,EAAAA,EAAAA,KAACG,EAAAA,EAAiB,CAACJ,KAAMX,EAAQW,KAAKG,UACpCF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTX,KAAMA,EACNY,KAAMC,EAAAA,GAAAA,MACNnB,SAAUA,EACVoB,QAjCgCC,KAKtC,GAFAnB,EAAUoB,gBAAgBrB,EAAS,CAAEsB,QAAQ,IAEzCtB,EAAQuB,IAAIC,WAAW,UAEzB,YADAC,EAAAA,EAAAA,IAAuBjB,EAAcR,EAAQuB,KAI/C,MAAMG,EAAOC,SAASC,cAAc,KAC9BC,EAAM1B,EAAU2B,cAAc9B,EAAQuB,KAC5CG,EAAKK,aAAa,OAAQF,GAC1BH,EAAKK,aAAa,SAAU,SAC5BL,EAAKK,aAAa,WAAY,IAC9BL,EAAKM,OAAO,EAmBNtB,aAAYV,EAAQiC,mBAAoBvB,EAAmBI,UAE3DF,EAAAA,EAAAA,KAACsB,EAAAA,GAAiB,CAChBC,OAAQnC,EAAQoC,MAChBC,WAAW,EACXC,SAAO,EACPC,aAAW,EACXC,cAAY,SAMxB,C","sources":["../../../streamlit/frontend/lib/src/components/widgets/DownloadButton/DownloadButton.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { DownloadButton as DownloadButtonProto } from \"@streamlit/lib/src/proto\"\nimport BaseButton, {\n  BaseButtonTooltip,\n  BaseButtonKind,\n  BaseButtonSize,\n} from \"@streamlit/lib/src/components/shared/BaseButton\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport StreamlitMarkdown from \"@streamlit/lib/src/components/shared/StreamlitMarkdown\"\nimport { StreamlitEndpoints } from \"@streamlit/lib/src/StreamlitEndpoints\"\nimport { useStliteKernel, downloadFileFromStlite } from \"@stlite/kernel\"\n\nexport interface Props {\n  endpoints: StreamlitEndpoints\n  disabled: boolean\n  element: DownloadButtonProto\n  widgetMgr: WidgetStateManager\n  width: number\n}\n\nfunction DownloadButton(props: Props): ReactElement {\n  const { disabled, element, widgetMgr, width, endpoints } = props\n  const style = { width }\n\n  const kind =\n    element.type === \"primary\"\n      ? BaseButtonKind.PRIMARY\n      : BaseButtonKind.SECONDARY\n\n  const stliteKernel = useStliteKernel()\n\n  const handleDownloadClick: () => void = () => {\n    // Downloads are only done on links, so create a hidden one and click it\n    // for the user.\n    widgetMgr.setTriggerValue(element, { fromUi: true })\n\n    if (element.url.startsWith(\"/media\")) {\n      downloadFileFromStlite(stliteKernel, element.url)\n      return\n    }\n\n    const link = document.createElement(\"a\")\n    const uri = endpoints.buildMediaURL(element.url)\n    link.setAttribute(\"href\", uri)\n    link.setAttribute(\"target\", \"_self\")\n    link.setAttribute(\"download\", \"\")\n    link.click()\n  }\n\n  // When useContainerWidth true & has help tooltip,\n  // we need to pass the container width down to the button\n  const fluidWidth = element.help ? width : true\n\n  return (\n    <div\n      className=\"row-widget stDownloadButton\"\n      data-testid=\"stDownloadButton\"\n      style={style}\n    >\n      <BaseButtonTooltip help={element.help}>\n        <BaseButton\n          kind={kind}\n          size={BaseButtonSize.SMALL}\n          disabled={disabled}\n          onClick={handleDownloadClick}\n          fluidWidth={element.useContainerWidth ? fluidWidth : false}\n        >\n          <StreamlitMarkdown\n            source={element.label}\n            allowHTML={false}\n            isLabel\n            largerLabel\n            disableLinks\n          />\n        </BaseButton>\n      </BaseButtonTooltip>\n    </div>\n  )\n}\n\nexport default DownloadButton\n"],"names":["props","disabled","element","widgetMgr","width","endpoints","style","kind","type","BaseButtonKind","stliteKernel","useStliteKernel","fluidWidth","help","_jsx","className","children","BaseButtonTooltip","BaseButton","size","BaseButtonSize","onClick","handleDownloadClick","setTriggerValue","fromUi","url","startsWith","downloadFileFromStlite","link","document","createElement","uri","buildMediaURL","setAttribute","click","useContainerWidth","StreamlitMarkdown","source","label","allowHTML","isLabel","largerLabel","disableLinks"],"sourceRoot":""}