{"version":3,"file":"static/js/9709.d66be9ad.chunk.js","mappings":"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","sources":["../../../streamlit/frontend/lib/src/components/shared/ProgressBar/ProgressBar.tsx","../../../streamlit/frontend/lib/src/components/widgets/CameraInput/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/CameraInput/CameraInputButton.tsx","../../../streamlit/frontend/lib/src/components/widgets/CameraInput/SwitchFacingModeButton.tsx","../../../streamlit/frontend/lib/src/components/widgets/CameraInput/WebcamComponent.tsx","../../../streamlit/frontend/lib/src/components/widgets/CameraInput/CameraInput.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/UploadFileInfo.ts","../../../streamlit/frontend/lib/src/components/widgets/Form/FormClearHelper.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { useTheme } from \"@emotion/react\"\nimport { LibContext } from \"@streamlit/lib/src/components/core/LibContext\"\nimport { EmotionTheme, isPresetTheme } from \"@streamlit/lib/src/theme\"\nimport {\n  ProgressBar as UIProgressBar,\n  ProgressBarOverrides,\n} from \"baseui/progress-bar\"\nimport { mergeOverrides } from \"baseui\"\nimport { Overrides } from \"baseui/overrides\"\n\nexport enum Size {\n  EXTRASMALL = \"xs\",\n  SMALL = \"sm\",\n  MEDIUM = \"md\",\n  LARGE = \"lg\",\n  EXTRALARGE = \"xl\",\n}\n\nexport interface ProgressBarProps {\n  width?: number\n  value: number\n  overrides?: Overrides<any>\n  size?: Size\n}\n\nfunction ProgressBar({\n  value,\n  width,\n  size = Size.SMALL,\n  overrides,\n}: ProgressBarProps): ReactElement {\n  const theme: EmotionTheme = useTheme()\n  const heightMap = {\n    xs: theme.spacing.twoXS,\n    sm: theme.spacing.sm,\n    md: theme.spacing.lg,\n    lg: theme.spacing.xl,\n    xl: theme.spacing.twoXL,\n  }\n  const { activeTheme } = React.useContext(LibContext)\n  const usingCustomTheme = !isPresetTheme(activeTheme)\n  const defaultOverrides: Overrides<ProgressBarOverrides> = {\n    BarContainer: {\n      style: {\n        marginTop: theme.spacing.none,\n        marginBottom: theme.spacing.none,\n        marginRight: theme.spacing.none,\n        marginLeft: theme.spacing.none,\n      },\n    },\n    Bar: {\n      style: ({ $theme }: { $theme: any }) => ({\n        width: width ? width.toString() : undefined,\n        marginTop: theme.spacing.none,\n        marginBottom: theme.spacing.none,\n        marginRight: theme.spacing.none,\n        marginLeft: theme.spacing.none,\n        height: heightMap[size],\n        backgroundColor: $theme.colors.progressbarTrackFill,\n        borderTopLeftRadius: theme.spacing.twoXS,\n        borderTopRightRadius: theme.spacing.twoXS,\n        borderBottomLeftRadius: theme.spacing.twoXS,\n        borderBottomRightRadius: theme.spacing.twoXS,\n      }),\n    },\n    BarProgress: {\n      style: () => ({\n        backgroundColor: usingCustomTheme\n          ? theme.colors.primary\n          : theme.colors.blue70,\n        borderTopLeftRadius: theme.spacing.twoXS,\n        borderTopRightRadius: theme.spacing.twoXS,\n        borderBottomLeftRadius: theme.spacing.twoXS,\n        borderBottomRightRadius: theme.spacing.twoXS,\n      }),\n    },\n  }\n\n  return (\n    <UIProgressBar\n      value={value}\n      overrides={mergeOverrides(defaultOverrides, overrides)}\n    />\n  )\n}\n\nexport default ProgressBar\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled, { CSSObject } from \"@emotion/styled\"\nimport { transparentize } from \"color2k\"\nimport { MouseEvent, ReactNode } from \"react\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nexport interface CameraInputButtonProps {\n  onClick?: (event: MouseEvent<HTMLButtonElement>) => any\n  disabled?: boolean\n  children: ReactNode\n  progress?: number | null\n}\n\nexport interface StyledCameraInputProps {\n  width: number\n}\n\nenum Size {\n  XSMALL = \"xsmall\",\n  SMALL = \"small\",\n  MEDIUM = \"medium\",\n  LARGE = \"large\",\n}\n\nfunction getSizeStyle(size: Size, theme: EmotionTheme): CSSObject {\n  switch (size) {\n    case Size.XSMALL:\n      return {\n        padding: `${theme.spacing.twoXS} ${theme.spacing.sm}`,\n        fontSize: theme.fontSizes.sm,\n      }\n    case Size.SMALL:\n      return {\n        padding: `${theme.spacing.twoXS} ${theme.spacing.md}`,\n      }\n    case Size.LARGE:\n      return {\n        padding: `${theme.spacing.md} ${theme.spacing.md}`,\n      }\n    default:\n      return {\n        padding: `${theme.spacing.xs} ${theme.spacing.md}`,\n      }\n  }\n}\n\ntype RequiredCameraInputButtonProps = Required<CameraInputButtonProps>\n\nexport const StyledCameraInput = styled.div<StyledCameraInputProps>(() => ({\n  // This is used to position the \"Switch facing mode\" button\n  // with respect to the webcam block.\n  position: \"relative\",\n  overflow: \"hidden\",\n  width: \"100%\",\n  objectFit: \"contain\",\n}))\n\nexport interface StyledBoxProps {\n  width: number\n}\n\nexport const StyledBox = styled.div<StyledBoxProps>(({ theme, width }) => ({\n  backgroundColor: theme.colors.secondaryBg,\n  borderRadius: `${theme.radii.lg} ${theme.radii.lg} 0 0`,\n  width: \"100%\",\n  height: (width * 9) / 16,\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}))\n\nexport const StyledDescription = styled.p(({ theme }) => ({\n  marginTop: theme.spacing.sm,\n  textAlign: \"center\",\n}))\n\nexport interface StyledImgProps {\n  opacity: string\n}\n\nexport const StyledImg = styled.img<StyledImgProps>(({ theme, opacity }) => ({\n  borderRadius: `${theme.radii.lg} ${theme.radii.lg} 0 0`,\n  objectFit: \"contain\",\n  opacity,\n}))\n\nexport const StyledLink = styled.a(({ theme }) => ({\n  color: theme.colors.primary,\n  display: \"block\",\n  textDecoration: \"none\",\n}))\n\nexport const StyledSpan = styled.span(() => ({\n  display: \"flex\",\n  alignItems: \"center\",\n}))\n\nexport const StyledSwitchFacingModeButton = styled.div(({ theme }) => ({\n  position: \"absolute\",\n  top: theme.spacing.lg,\n  right: theme.spacing.lg,\n  zIndex: 1,\n  color: theme.colors.fadedText40,\n  mixBlendMode: \"difference\",\n  opacity: 0.6,\n}))\n\nexport const StyledWebcamWrapper = styled.div(() => ({\n  display: \"flex\",\n}))\n\nexport const StyledProgressBar = styled.div(() => ({\n  height: \"fit-content\",\n  width: \"100%\",\n  position: \"absolute\",\n  bottom: 0,\n}))\n\nexport const StyledCameraInputBaseButton =\n  styled.button<RequiredCameraInputButtonProps>(({ theme }) => ({\n    position: \"relative\",\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: theme.colors.lightenedBg05,\n    border: `1px solid ${theme.colors.fadedText10}`,\n    borderRadius: `0 0 ${theme.radii.lg} ${theme.radii.lg}`,\n    \"&:hover\": {\n      borderColor: theme.colors.primary,\n      color: theme.colors.primary,\n    },\n    \"&:active\": {\n      color: theme.colors.white,\n      borderColor: theme.colors.primary,\n      backgroundColor: theme.colors.primary,\n    },\n    \"&:focus:not(:active)\": {\n      borderColor: theme.colors.primary,\n      color: theme.colors.primary,\n    },\n    \"&:disabled, &:disabled:hover, &:disabled:active\": {\n      color: theme.colors.fadedText40,\n    },\n    fontWeight: theme.fontWeights.normal,\n    padding: `${theme.spacing.xs} ${theme.spacing.md}`,\n    margin: 0,\n    lineHeight: theme.lineHeights.base,\n    color: \"inherit\",\n    width: \"100%\",\n    userSelect: \"none\",\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:focus-visible\": {\n      boxShadow: `0 0 0 0.2rem ${transparentize(theme.colors.primary, 0.5)}`,\n    },\n    ...getSizeStyle(Size.MEDIUM, theme),\n  }))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { MouseEvent, ReactElement, ReactNode } from \"react\"\n\nimport ProgressBar, {\n  Size as ProgressBarSize,\n} from \"@streamlit/lib/src/components/shared/ProgressBar\"\nimport {\n  StyledCameraInputBaseButton,\n  StyledProgressBar,\n} from \"./styled-components\"\n\nexport interface CameraInputButtonProps {\n  onClick?: (event: MouseEvent<HTMLButtonElement>) => any\n  disabled?: boolean\n  progress?: number | null\n  children?: ReactNode\n}\n\nfunction CameraInputButton({\n  disabled,\n  onClick,\n  children,\n  progress,\n}: CameraInputButtonProps): ReactElement {\n  return (\n    <StyledCameraInputBaseButton\n      disabled={disabled || false}\n      onClick={onClick || (() => {})}\n      progress={progress || null}\n      data-testid=\"stCameraInputButton\"\n    >\n      {children}\n      {progress && (\n        <StyledProgressBar>\n          <ProgressBar\n            value={progress}\n            size={ProgressBarSize.EXTRASMALL}\n            overrides={{\n              Bar: {\n                style: {\n                  borderTopLeftRadius: \"0px\",\n                  borderTopRightRadius: \"0px\",\n                },\n              },\n              BarProgress: {\n                style: {\n                  borderTopLeftRadius: \"0px\",\n                  borderTopRightRadius: \"0px\",\n                },\n              },\n              BarContainer: {\n                style: {\n                  borderTopLeftRadius: \"0px\",\n                  borderTopRightRadius: \"0px\",\n                },\n              },\n            }}\n          />\n        </StyledProgressBar>\n      )}\n    </StyledCameraInputBaseButton>\n  )\n}\n\nexport default CameraInputButton\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { SwitchCamera } from \"@emotion-icons/material-rounded\"\n\nimport BaseButton, {\n  BaseButtonKind,\n} from \"@streamlit/lib/src/components/shared/BaseButton\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport Tooltip, {\n  Placement,\n} from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport themeColors from \"@streamlit/lib/src/theme/emotionBaseTheme/themeColors\"\nimport { StyledSwitchFacingModeButton } from \"./styled-components\"\n\nexport enum FacingMode {\n  USER = \"user\",\n  ENVIRONMENT = \"environment\",\n}\n\nexport interface SwitchFacingModeButtonProps {\n  switchFacingMode: () => void\n}\n\nconst SwitchFacingModeButton = ({\n  switchFacingMode,\n}: SwitchFacingModeButtonProps): ReactElement => {\n  return (\n    <StyledSwitchFacingModeButton data-testid=\"stCameraSwitchButton\">\n      <Tooltip content={\"Switch camera\"} placement={Placement.TOP_RIGHT}>\n        <BaseButton kind={BaseButtonKind.MINIMAL} onClick={switchFacingMode}>\n          <Icon\n            content={SwitchCamera}\n            size=\"twoXL\"\n            color={themeColors.white}\n          />\n        </BaseButton>\n      </Tooltip>\n    </StyledSwitchFacingModeButton>\n  )\n}\n\nexport default SwitchFacingModeButton\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Video } from \"@emotion-icons/open-iconic\"\nimport { useTheme } from \"@emotion/react\"\nimport React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\nimport { isMobile } from \"react-device-detect\"\nimport Webcam from \"react-webcam\"\nimport { debounce } from \"@streamlit/lib/src/util/utils\"\n\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\nimport themeColors from \"@streamlit/lib/src/theme/emotionBaseTheme/themeColors\"\nimport { CAMERA_PERMISSION_URL } from \"@streamlit/lib/src/urls\"\n\nimport CameraInputButton from \"./CameraInputButton\"\nimport SwitchFacingModeButton, { FacingMode } from \"./SwitchFacingModeButton\"\nimport {\n  StyledBox,\n  StyledCameraInput,\n  StyledDescription,\n  StyledLink,\n} from \"./styled-components\"\n\nexport interface Props {\n  handleCapture: (capturedPhoto: string | null) => void\n  width: number\n  disabled: boolean\n  clearPhotoInProgress: boolean\n  setClearPhotoInProgress: (clearPhotoInProgress: boolean) => void\n  facingMode: FacingMode\n  setFacingMode: () => void\n  // Allow for unit testing\n  testOverride?: WebcamPermission\n}\n\nexport enum WebcamPermission {\n  PENDING = \"pending\",\n  SUCCESS = \"success\",\n  ERROR = \"error\",\n}\n\ninterface AskForCameraPermissionProps {\n  width: number\n}\n\nexport const AskForCameraPermission = ({\n  width,\n}: AskForCameraPermissionProps): ReactElement => {\n  return (\n    <StyledBox width={width}>\n      <Icon size=\"threeXL\" color={themeColors.gray60} content={Video} />\n      <StyledDescription>\n        This app would like to use your camera.\n        <StyledLink\n          href={CAMERA_PERMISSION_URL}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Learn how to allow access.\n        </StyledLink>\n      </StyledDescription>\n    </StyledBox>\n  )\n}\n\nconst WebcamComponent = ({\n  handleCapture,\n  width,\n  disabled,\n  clearPhotoInProgress,\n  setClearPhotoInProgress,\n  facingMode,\n  setFacingMode,\n  testOverride,\n}: Props): ReactElement => {\n  const [webcamPermission, setWebcamPermissionState] = useState(\n    testOverride || WebcamPermission.PENDING\n  )\n  const videoRef = useRef<Webcam>(null)\n\n  const [debouncedWidth, setDebouncedWidth] = useState(width)\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const memoizedSetDebouncedCallback = useCallback(\n    debounce(1000, setDebouncedWidth),\n    []\n  )\n\n  useEffect(() => {\n    memoizedSetDebouncedCallback(width)\n  }, [width, memoizedSetDebouncedCallback])\n\n  function capture(): void {\n    if (videoRef.current !== null) {\n      const imageSrc = videoRef.current.getScreenshot()\n      handleCapture(imageSrc)\n    }\n  }\n\n  const theme: EmotionTheme = useTheme()\n\n  return (\n    <StyledCameraInput width={debouncedWidth} data-testid=\"stWebcamComponent\">\n      {webcamPermission !== WebcamPermission.SUCCESS &&\n      !disabled &&\n      !clearPhotoInProgress ? (\n        <AskForCameraPermission width={debouncedWidth} />\n      ) : (\n        isMobile && <SwitchFacingModeButton switchFacingMode={setFacingMode} />\n      )}\n      <StyledBox\n        data-testid=\"stWebcamStyledBox\"\n        hidden={\n          webcamPermission !== WebcamPermission.SUCCESS &&\n          !disabled &&\n          !clearPhotoInProgress\n        }\n        width={debouncedWidth}\n      >\n        {!disabled && (\n          <Webcam\n            audio={false}\n            ref={videoRef}\n            screenshotFormat=\"image/jpeg\"\n            screenshotQuality={1}\n            width={debouncedWidth}\n            // We keep Aspect ratio of container always equal 16 / 9.\n            // The aspect ration of video stream may be different depending on a camera.\n            height={(debouncedWidth * 9) / 16}\n            style={{\n              borderRadius: `${theme.radii.lg} ${theme.radii.lg} 0 0`,\n            }}\n            onUserMediaError={() => {\n              setWebcamPermissionState(WebcamPermission.ERROR)\n            }}\n            onUserMedia={() => {\n              setWebcamPermissionState(WebcamPermission.SUCCESS)\n              setClearPhotoInProgress(false)\n            }}\n            videoConstraints={{\n              width: { ideal: debouncedWidth },\n              facingMode,\n            }}\n          />\n        )}\n      </StyledBox>\n      <CameraInputButton\n        onClick={capture}\n        disabled={\n          webcamPermission !== WebcamPermission.SUCCESS ||\n          disabled ||\n          clearPhotoInProgress\n        }\n      >\n        Take Photo\n      </CameraInputButton>\n    </StyledCameraInput>\n  )\n}\n\nexport default WebcamComponent\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { X } from \"@emotion-icons/open-iconic\"\nimport axios from \"axios\"\nimport isEqual from \"lodash/isEqual\"\nimport React from \"react\"\n\nimport {\n  CameraInput as CameraInputProto,\n  FileUploaderState as FileUploaderStateProto,\n  FileURLs as FileURLsProto,\n  IFileURLs,\n  UploadedFileInfo as UploadedFileInfoProto,\n} from \"@streamlit/lib/src/proto\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport TooltipIcon from \"@streamlit/lib/src/components/shared/TooltipIcon\"\nimport {\n  StyledWidgetLabelHelp,\n  WidgetLabel,\n} from \"@streamlit/lib/src/components/widgets/BaseWidget\"\nimport { FormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport { FileUploadClient } from \"@streamlit/lib/src/FileUploadClient\"\nimport { logError } from \"@streamlit/lib/src/util/log\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport { labelVisibilityProtoValueToEnum } from \"@streamlit/lib/src/util/utils\"\nimport {\n  UploadedStatus,\n  UploadFileInfo,\n  UploadingStatus,\n} from \"@streamlit/lib/src/components/widgets/FileUploader/UploadFileInfo\"\nimport CameraInputButton from \"./CameraInputButton\"\nimport { FacingMode } from \"./SwitchFacingModeButton\"\nimport {\n  StyledBox,\n  StyledCameraInput,\n  StyledSpan,\n  StyledImg,\n} from \"./styled-components\"\nimport WebcamComponent, { WebcamPermission } from \"./WebcamComponent\"\n\nexport interface Props {\n  element: CameraInputProto\n  widgetMgr: WidgetStateManager\n  uploadClient: FileUploadClient\n  disabled: boolean\n  width: number\n  fragmentId?: string\n  // Allow for unit testing\n  testOverride?: WebcamPermission\n}\n\ntype FileUploaderStatus =\n  | \"ready\" // FileUploader can upload or delete files\n  | \"updating\" // at least one file is being uploaded or deleted\n\nexport interface State {\n  /**\n   * Base64-encoded image data of the current frame from the camera.\n   */\n  imgSrc: string | null\n\n  shutter: boolean\n\n  minShutterEffectPassed: boolean\n  /**\n   * List of files (snapshots) captured by the user.\n   * Should contain exact one element if the user has taken a snapshot.\n   */\n  files: UploadFileInfo[]\n\n  /**\n   * Represents whether the component is in clear photo mode,\n   * when snapshot removed and new Webcam component is not shown yet.\n   * Time interval between `Clear Photo` button clicked and access to Webcam received again\n   */\n  clearPhotoInProgress: boolean\n\n  /**\n   * User facing mode for mobile devices. If `user`, the camera will be facing the user (front camera).\n   * If `environment`, the camera will be facing the environment (back camera).\n   */\n  facingMode: FacingMode\n}\n\nconst MIN_SHUTTER_EFFECT_TIME_MS = 150\n\nclass CameraInput extends React.PureComponent<Props, State> {\n  private localFileIdCounter = 1\n\n  private RESTORED_FROM_WIDGET_STRING = \"RESTORED_FROM_WIDGET\"\n\n  private readonly formClearHelper = new FormClearHelper()\n\n  public constructor(props: Props) {\n    super(props)\n    this.state = this.initialValue\n  }\n\n  private getProgress = (): number | null | undefined => {\n    if (\n      this.state.files.length > 0 &&\n      this.state.files[this.state.files.length - 1].status.type === \"uploading\"\n    ) {\n      const status = this.state.files[this.state.files.length - 1]\n        .status as UploadingStatus\n      return status.progress\n    }\n    return undefined\n  }\n\n  private setClearPhotoInProgress = (clearPhotoInProgress: boolean): void => {\n    this.setState({ clearPhotoInProgress })\n  }\n\n  private setFacingMode = (): void => {\n    this.setState(prevState => ({\n      facingMode:\n        prevState.facingMode === FacingMode.USER\n          ? FacingMode.ENVIRONMENT\n          : FacingMode.USER,\n    }))\n  }\n\n  private handleCapture = (imgSrc: string | null): Promise<void> => {\n    if (imgSrc === null) {\n      return Promise.resolve()\n    }\n\n    this.setState({\n      imgSrc,\n      shutter: true,\n      minShutterEffectPassed: false,\n    })\n\n    const delay = (t: number): Promise<ReturnType<typeof setTimeout>> =>\n      new Promise(resolve => setTimeout(resolve, t))\n\n    return urltoFile(\n      imgSrc,\n      `camera-input-${new Date().toISOString().replace(/:/g, \"_\")}.jpg`\n    )\n      .then(file =>\n        this.props.uploadClient\n          .fetchFileURLs([file])\n          .then(fileURLsArray => ({ file: file, fileUrls: fileURLsArray[0] }))\n      )\n      .then(({ file, fileUrls }) => this.uploadFile(fileUrls, file))\n      .then(() => delay(MIN_SHUTTER_EFFECT_TIME_MS))\n      .then(() => {\n        this.setState((prevState, _) => {\n          return {\n            imgSrc,\n            shutter: prevState.shutter,\n            minShutterEffectPassed: true,\n          }\n        })\n      })\n      .catch(err => {\n        logError(err)\n      })\n  }\n\n  private removeCapture = (): void => {\n    if (this.state.files.length === 0) {\n      return\n    }\n\n    this.state.files.forEach(file => this.deleteFile(file.id))\n\n    this.setState({\n      imgSrc: null,\n      clearPhotoInProgress: true,\n    })\n  }\n\n  get initialValue(): State {\n    const emptyState = {\n      files: [],\n      imgSrc: null,\n      shutter: false,\n      minShutterEffectPassed: true,\n      clearPhotoInProgress: false,\n      facingMode: FacingMode.USER,\n    }\n    const { widgetMgr, element } = this.props\n\n    const widgetValue = widgetMgr.getFileUploaderStateValue(element)\n\n    if (widgetValue == null) {\n      return emptyState\n    }\n\n    const { uploadedFileInfo } = widgetValue\n    if (uploadedFileInfo == null || uploadedFileInfo.length === 0) {\n      return emptyState\n    }\n\n    return {\n      files: uploadedFileInfo.map(f => {\n        const name = f.name as string\n        const size = f.size as number\n\n        const fileId = f.fileId as string\n        const fileUrls = f.fileUrls as FileURLsProto\n\n        return new UploadFileInfo(name, size, this.nextLocalFileId(), {\n          type: \"uploaded\",\n          fileId,\n          fileUrls,\n        })\n      }),\n      imgSrc:\n        uploadedFileInfo.length === 0 ? \"\" : this.RESTORED_FROM_WIDGET_STRING,\n      shutter: false,\n      minShutterEffectPassed: false,\n      clearPhotoInProgress: false,\n      facingMode: FacingMode.USER,\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.formClearHelper.disconnect()\n  }\n\n  /**\n   * Return the FileUploader's current status, which is derived from\n   * its state.\n   */\n  public get status(): FileUploaderStatus {\n    const isFileUpdating = (file: UploadFileInfo): boolean =>\n      file.status.type === \"uploading\"\n\n    // If any of our files is Uploading or Deleting, then we're currently\n    // updating.\n    if (this.state.files.some(isFileUpdating)) {\n      return \"updating\"\n    }\n\n    return \"ready\"\n  }\n\n  public componentDidUpdate = (): void => {\n    // If our status is not \"ready\", then we have uploads in progress.\n    // We won't submit a new widgetValue until all uploads have resolved.\n    if (this.status !== \"ready\") {\n      return\n    }\n\n    // If we have had no completed uploads, our widgetValue will be\n    // undefined, and we can early-out of the state update.\n    const newWidgetValue = this.createWidgetValue()\n\n    const { element, widgetMgr, fragmentId } = this.props\n\n    // Maybe send a widgetValue update to the widgetStateManager.\n    const prevWidgetValue = widgetMgr.getFileUploaderStateValue(element)\n    if (!isEqual(newWidgetValue, prevWidgetValue)) {\n      widgetMgr.setFileUploaderStateValue(\n        element,\n        newWidgetValue,\n        {\n          fromUi: true,\n        },\n        fragmentId\n      )\n    }\n  }\n\n  public componentDidMount(): void {\n    const newWidgetValue = this.createWidgetValue()\n    const { element, widgetMgr, fragmentId } = this.props\n\n    // Set the state value on mount, to avoid triggering an extra rerun after\n    // the first rerun.\n    // We use same primitives as in file uploader widget,\n    // since simanticly camera_input is just a special case of file uploader.\n    const prevWidgetValue = widgetMgr.getFileUploaderStateValue(element)\n    if (prevWidgetValue === undefined) {\n      widgetMgr.setFileUploaderStateValue(\n        element,\n        newWidgetValue,\n        {\n          fromUi: false,\n        },\n        fragmentId\n      )\n    }\n  }\n\n  private createWidgetValue(): FileUploaderStateProto {\n    const uploadedFileInfo: UploadedFileInfoProto[] = this.state.files\n      .filter(f => f.status.type === \"uploaded\")\n      .map(f => {\n        const { name, size, status } = f\n        return new UploadedFileInfoProto({\n          fileId: (status as UploadedStatus).fileId,\n          fileUrls: (status as UploadedStatus).fileUrls,\n          name,\n          size,\n        })\n      })\n\n    return new FileUploaderStateProto({ uploadedFileInfo })\n  }\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  private onFormCleared = (): void => {\n    this.setState({ files: [] }, () => {\n      const newWidgetValue = this.createWidgetValue()\n      if (newWidgetValue == null) {\n        return\n      }\n\n      this.setState({\n        imgSrc: null,\n      })\n\n      const { widgetMgr, element, fragmentId } = this.props\n      widgetMgr.setFileUploaderStateValue(\n        element,\n        newWidgetValue,\n        { fromUi: true },\n        fragmentId\n      )\n    })\n  }\n\n  public render(): React.ReactNode {\n    const { element, widgetMgr, disabled, width } = this.props\n\n    // Manage our form-clear event handler.\n    this.formClearHelper.manageFormClearListener(\n      widgetMgr,\n      element.formId,\n      this.onFormCleared\n    )\n\n    return (\n      <StyledCameraInput\n        width={width}\n        className=\"row-widget\"\n        data-testid=\"stCameraInput\"\n      >\n        <WidgetLabel\n          label={element.label}\n          disabled={disabled}\n          labelVisibility={labelVisibilityProtoValueToEnum(\n            element.labelVisibility?.value\n          )}\n        >\n          {element.help && (\n            <StyledWidgetLabelHelp>\n              <TooltipIcon\n                content={element.help}\n                placement={Placement.TOP_RIGHT}\n              />\n            </StyledWidgetLabelHelp>\n          )}\n        </WidgetLabel>\n        {this.state.imgSrc ? (\n          <>\n            <StyledBox width={width}>\n              {this.state.imgSrc !== this.RESTORED_FROM_WIDGET_STRING && (\n                <StyledImg\n                  src={this.state.imgSrc}\n                  alt=\"Snapshot\"\n                  opacity={\n                    this.state.shutter || !this.state.minShutterEffectPassed\n                      ? \"50%\"\n                      : \"100%\"\n                  }\n                  width={width}\n                  height={(width * 9) / 16}\n                />\n              )}\n            </StyledBox>\n            <CameraInputButton\n              onClick={this.removeCapture}\n              progress={this.getProgress()}\n              disabled={!!this.getProgress() || disabled}\n            >\n              {this.getProgress() ? (\n                \"Uploading...\"\n              ) : (\n                <StyledSpan>\n                  <Icon content={X} margin=\"0 xs 0 0\" size=\"sm\" /> Clear photo\n                </StyledSpan>\n              )}\n            </CameraInputButton>\n          </>\n        ) : (\n          <WebcamComponent\n            handleCapture={this.handleCapture}\n            width={width}\n            disabled={disabled}\n            clearPhotoInProgress={this.state.clearPhotoInProgress}\n            setClearPhotoInProgress={this.setClearPhotoInProgress}\n            facingMode={this.state.facingMode}\n            setFacingMode={this.setFacingMode}\n            testOverride={this.props.testOverride}\n          />\n        )}\n      </StyledCameraInput>\n    )\n  }\n\n  private nextLocalFileId(): number {\n    return this.localFileIdCounter++\n  }\n\n  /**\n   * Delete the file with the given ID:\n   * - Cancel the file upload if it's in progress\n   * - Remove the fileID from our local state\n   * We don't actually tell the server to delete the file. It will garbage\n   * collect it.\n   */\n  public deleteFile = (fileId: number): void => {\n    const file = this.getFile(fileId)\n    if (file == null) {\n      return\n    }\n\n    if (file.status.type === \"uploading\") {\n      // The file hasn't been uploaded. Let's cancel the request.\n      // However, it may have been received by the server so we'll still\n      // send out a request to delete.\n      file.status.cancelToken.cancel()\n    }\n\n    if (file.status.type === \"uploaded\" && file.status.fileUrls.deleteUrl) {\n      this.props.uploadClient.deleteFile(file.status.fileUrls.deleteUrl)\n    }\n    this.removeFile(fileId)\n  }\n\n  /** Append the given file to `state.files`. */\n  private addFile = (file: UploadFileInfo): void => {\n    this.setState(state => ({ files: [...state.files, file] }))\n  }\n\n  /** Remove the file with the given ID from `state.files`. */\n  private removeFile = (idToRemove: number): void => {\n    this.setState(state => ({\n      files: state.files.filter(file => file.id !== idToRemove),\n    }))\n  }\n\n  /**\n   * Return the file with the given ID, if one exists.\n   */\n  private getFile = (fileId: number): UploadFileInfo | undefined => {\n    return this.state.files.find(file => file.id === fileId)\n  }\n\n  /** Replace the file with the given id in `state.files`. */\n  private updateFile = (curFileId: number, newFile: UploadFileInfo): void => {\n    this.setState(curState => {\n      return {\n        files: curState.files.map(file =>\n          file.id === curFileId ? newFile : file\n        ),\n      }\n    })\n  }\n\n  /**\n   * Called when an upload has completed. Updates the file's status, and\n   * assigns it the new file ID returned from the server.\n   */\n  private onUploadComplete = (\n    localFileId: number,\n    fileUrls: IFileURLs\n  ): void => {\n    this.setState(() => ({\n      shutter: false,\n    }))\n\n    const curFile = this.getFile(localFileId)\n    if (curFile == null || curFile.status.type !== \"uploading\") {\n      // The file may have been canceled right before the upload\n      // completed. In this case, we just bail.\n      return\n    }\n\n    this.updateFile(\n      curFile.id,\n      curFile.setStatus({\n        type: \"uploaded\",\n        fileId: fileUrls.fileId as string,\n        fileUrls,\n      })\n    )\n  }\n\n  /**\n   * Callback for file upload progress. Updates a single file's local `progress`\n   * state.\n   */\n  private onUploadProgress = (event: ProgressEvent, fileId: number): void => {\n    const file = this.getFile(fileId)\n    if (file == null || file.status.type !== \"uploading\") {\n      return\n    }\n\n    const newProgress = Math.round((event.loaded * 100) / event.total)\n    if (file.status.progress === newProgress) {\n      return\n    }\n\n    // Update file.progress\n    this.updateFile(\n      fileId,\n      file.setStatus({\n        type: \"uploading\",\n        cancelToken: file.status.cancelToken,\n        progress: newProgress,\n      })\n    )\n  }\n\n  /**\n   * Clear files and errors, and reset the widget to its READY state.\n   */\n  private reset = (): void => {\n    this.setState({ files: [], imgSrc: null })\n  }\n\n  public uploadFile = (fileURLs: IFileURLs, file: File): void => {\n    // Create an UploadFileInfo for this file and add it to our state.\n    const cancelToken = axios.CancelToken.source()\n    const uploadingFileInfo = new UploadFileInfo(\n      file.name,\n      file.size,\n      this.nextLocalFileId(),\n      {\n        type: \"uploading\",\n        cancelToken,\n        progress: 1,\n      }\n    )\n    this.addFile(uploadingFileInfo)\n\n    this.props.uploadClient\n      .uploadFile(\n        this.props.element,\n        fileURLs.uploadUrl as string,\n        file,\n        e => this.onUploadProgress(e, uploadingFileInfo.id),\n        cancelToken.token\n      )\n      .then(() => this.onUploadComplete(uploadingFileInfo.id, fileURLs))\n      .catch(err => {\n        // If this was a cancel error, we don't show the user an error -\n        // the cancellation was in response to an action they took.\n        if (!axios.isCancel(err)) {\n          this.updateFile(\n            uploadingFileInfo.id,\n            uploadingFileInfo.setStatus({\n              type: \"error\",\n              errorMessage: err ? err.toString() : \"Unknown error\",\n            })\n          )\n        }\n      })\n  }\n}\n\nfunction urltoFile(url: string, filename: string): Promise<File> {\n  return fetch(url)\n    .then(res => res.arrayBuffer())\n    .then(buf => new File([buf], filename, { type: \"image/jpeg\" }))\n}\n\nexport default CameraInput\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CancelTokenSource } from \"axios\"\nimport { IFileURLs } from \"@streamlit/lib/src/proto\"\n\nexport interface UploadingStatus {\n  type: \"uploading\"\n  cancelToken: CancelTokenSource\n  progress: number\n}\n\nexport interface UploadedStatus {\n  type: \"uploaded\"\n\n  fileId: string\n  fileUrls: IFileURLs\n}\n\nexport interface ErrorStatus {\n  type: \"error\"\n  errorMessage: string\n}\n\n/** The various statuses that an UploadedFileInfo can have. */\nexport type FileStatus = UploadingStatus | UploadedStatus | ErrorStatus\n\n/**\n * Wraps a File object with additional data used by FileUploader.\n * This class is immutable because it's used in within FileUploader.state.\n */\nexport class UploadFileInfo {\n  public readonly name: string\n\n  public readonly size: number\n\n  public readonly status: FileStatus\n\n  /**\n   * ID used to refer to the file locally, for update operations.\n   * If the file is uploaded, it will also have a serverID, which is\n   * used to refer to the file on the server.\n   */\n  public readonly id: number\n\n  /**\n   * Create a clone of this UploadFileInfo with the given status.\n   */\n  public setStatus(status: FileStatus): UploadFileInfo {\n    return new UploadFileInfo(this.name, this.size, this.id, status)\n  }\n\n  public constructor(\n    name: string,\n    size: number,\n    id: number,\n    status: FileStatus\n  ) {\n    this.name = name\n    this.size = size\n    this.id = id\n    this.status = status\n  }\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isValidFormId } from \"@streamlit/lib/src/util/utils\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport { SignalConnection } from \"typed-signals\"\n\nexport class FormClearHelper {\n  private formClearListener?: SignalConnection\n\n  private lastWidgetMgr?: WidgetStateManager\n\n  private lastFormId?: string\n\n  /**\n   * Register the listener that will be called when the widget's form is cleared.\n   * This should be called in the `render` function of every class-based widget\n   * element - it mimics the behavior of a `useEffect` hook, and ensures that\n   * subscription and unsubscription happen correctly.\n   *\n   * Hooks-based widgets can just use `useEffect` and call\n   * `widgetMgr.addFormClearedListener` directly.\n   */\n  public manageFormClearListener(\n    widgetMgr: WidgetStateManager,\n    formId: string,\n    listener: () => void\n  ): void {\n    // If we're already subscribed and our params haven't changed, early-out.\n    if (\n      this.formClearListener != null &&\n      this.lastWidgetMgr === widgetMgr &&\n      this.lastFormId === formId\n    ) {\n      return\n    }\n\n    // Close our previous subscription, if we had one.\n    this.disconnect()\n\n    // If we're not part of a form, there's nothing to do.\n    if (!isValidFormId(formId)) {\n      return\n    }\n\n    // Make the new subscription.\n    this.formClearListener = widgetMgr.addFormClearedListener(formId, listener)\n    this.lastWidgetMgr = widgetMgr\n    this.lastFormId = formId\n  }\n\n  /**\n   * Disconnect from the form-clear signal, if we're connected.\n   * This should be called from the `componentWillUnmount` function of every\n   * element that uses it.\n   */\n  public disconnect(): void {\n    this.formClearListener?.disconnect()\n    this.formClearListener = undefined\n    this.lastWidgetMgr = undefined\n    this.lastFormId = undefined\n  }\n}\n"],"names":["Size","_ref","value","width","size","SMALL","overrides","theme","useTheme","heightMap","xs","spacing","twoXS","sm","md","lg","xl","twoXL","activeTheme","React","LibContext","usingCustomTheme","isPresetTheme","defaultOverrides","BarContainer","style","marginTop","none","marginBottom","marginRight","marginLeft","Bar","_ref2","$theme","toString","undefined","height","backgroundColor","colors","progressbarTrackFill","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","BarProgress","primary","blue70","_jsx","UIProgressBar","mergeOverrides","getSizeStyle","XSMALL","padding","concat","fontSize","fontSizes","LARGE","StyledCameraInput","_styled","target","position","overflow","objectFit","StyledBox","secondaryBg","borderRadius","radii","display","flexDirection","justifyContent","alignItems","StyledDescription","textAlign","StyledImg","_ref3","opacity","StyledLink","_ref4","color","textDecoration","StyledSpan","StyledSwitchFacingModeButton","_ref5","top","right","zIndex","fadedText40","mixBlendMode","StyledProgressBar","bottom","StyledCameraInputBaseButton","_ref6","lightenedBg05","border","fadedText10","borderColor","white","fontWeight","fontWeights","normal","margin","lineHeight","lineHeights","base","userSelect","outline","boxShadow","transparentize","MEDIUM","disabled","onClick","children","progress","_jsxs","ProgressBar","ProgressBarSize","FacingMode","switchFacingMode","Tooltip","content","placement","Placement","BaseButton","kind","BaseButtonKind","Icon","SwitchCamera","themeColors","WebcamPermission","AskForCameraPermission","Video","href","CAMERA_PERMISSION_URL","rel","handleCapture","clearPhotoInProgress","setClearPhotoInProgress","facingMode","setFacingMode","testOverride","webcamPermission","setWebcamPermissionState","useState","PENDING","videoRef","useRef","debouncedWidth","setDebouncedWidth","memoizedSetDebouncedCallback","useCallback","debounce","useEffect","SUCCESS","isMobile","SwitchFacingModeButton","hidden","Webcam","audio","ref","screenshotFormat","screenshotQuality","onUserMediaError","ERROR","onUserMedia","videoConstraints","ideal","CameraInputButton","current","imageSrc","getScreenshot","CameraInput","constructor","props","super","localFileIdCounter","RESTORED_FROM_WIDGET_STRING","formClearHelper","FormClearHelper","getProgress","this","state","files","length","status","type","setState","prevState","USER","ENVIRONMENT","imgSrc","Promise","resolve","shutter","minShutterEffectPassed","url","filename","Date","toISOString","replace","fetch","then","res","arrayBuffer","buf","File","file","uploadClient","fetchFileURLs","fileURLsArray","fileUrls","uploadFile","delay","t","setTimeout","_","catch","err","logError","removeCapture","forEach","deleteFile","id","componentDidUpdate","newWidgetValue","createWidgetValue","element","widgetMgr","fragmentId","prevWidgetValue","getFileUploaderStateValue","isEqual","setFileUploaderStateValue","fromUi","onFormCleared","fileId","getFile","cancelToken","cancel","deleteUrl","removeFile","addFile","idToRemove","filter","find","updateFile","curFileId","newFile","curState","map","onUploadComplete","localFileId","curFile","setStatus","onUploadProgress","event","newProgress","Math","round","loaded","total","reset","fileURLs","axios","uploadingFileInfo","UploadFileInfo","name","nextLocalFileId","uploadUrl","e","token","errorMessage","initialValue","emptyState","widgetValue","uploadedFileInfo","f","componentWillUnmount","disconnect","some","componentDidMount","UploadedFileInfoProto","FileUploaderStateProto","render","_element$labelVisibil","manageFormClearListener","formId","className","WidgetLabel","label","labelVisibility","labelVisibilityProtoValueToEnum","help","StyledWidgetLabelHelp","TooltipIcon","_Fragment","src","alt","X","WebcamComponent","formClearListener","lastWidgetMgr","lastFormId","listener","isValidFormId","addFormClearedListener","_this$formClearListen"],"sourceRoot":""}